SQL> set line 200
SQL> set pagesize 50
SQL> -- 오늘의 수업: foreign key
SQL> 
SQL> 
SQL> 
SQL> -- 상품 범주 테이블 생성
SQL> CREATE TABLE category(
  2  category_id NUMBER PRIMARY KEY,
  3  name VARCHAR(20)
  4  );

Table created.

SQL> 
SQL> 
SQL> DESC category;
 Name                                                                                                              Null?    Type
 ----------------------------------------------------------------------------------------------------------------- -------- ----------------------------------------------------------------------------
 CATEGORY_ID                                                                                                       NOT NULL NUMBER
 NAME                                                                                                                       VARCHAR2(20)

SQL> set line 100
SQL> DESC category;
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 CATEGORY_ID                                           NOT NULL NUMBER
 NAME                                                           VARCHAR2(20)

SQL> INSERT INTO category(category_id, name) VALUES(1, '상의');

1 row created.

SQL> INSERT INTO category(category_id, name) VALUES(2, '하의');

1 row created.

SQL> INSERT INTO category(category_id, name) VALUES(3, '악세사리');

1 row created.

SQL> INSERT INTO category(category_id, name) VALUES(4, '신발');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> -- 트랜잭션 4개 COMMIT하기
SQL> SELECT * FROM category;

CATEGORY_ID NAME                                                                                    
----------- ----------------------------------------                                                
          1 상의                                                                                    
          2 하의                                                                                    
          3 악세사리                                                                                
          4 신발                                                                                    

SQL> 
SQL> 
SQL> 
SQL> -- 방금 만든 카테고리 테이블을 참조하는 자식 테이블을 생성
SQL> CREATE TABLE product(
  2  product_id NUMBER PRIMARY KEY,
  3  catogory_id NUMBER FOREIGN KEY REFERENCES category(category_id),
  4  code VARCHAR(20),
  5  product_name VARCHAR(20),
  6  price NUMBER DEFAULT 0
  7  );
catogory_id NUMBER FOREIGN KEY REFERENCES category(category_id),
                   *
ERROR at line 3:
ORA-00907: missing right parenthesis 


SQL> ed
Wrote file afiedt.buf

  1  CREATE TABLE product(
  2  	product_id NUMBER PRIMARY KEY,
  3  	catogory_id NUMBER,
  4  	FOREIGN KEY(category_id) REFERENCES category(category_id),
  5  	code VARCHAR(20),
  6  	product_name VARCHAR(20),
  7  	price NUMBER DEFAULT 0
  8* )
SQL> /
	FOREIGN KEY(category_id) REFERENCES category(category_id),
	            *
ERROR at line 4:
ORA-00904: "CATEGORY_ID": invalid identifier 


SQL> ed
Wrote file afiedt.buf

  1  create  table product(
  2  product_id number primary key
  3  , category_id number
  4  , foreign key (category_id) references category(category_id)
  5  , code varchar(20)
  6  , product_name varchar(20)
  7  , price number default 0
  8* )
  9  /

Table created.

SQL> insert into product (product_id, category_id, code, product_name, price)
  2  VALUES(1, 1, 'JE5505', 'Metro청바지', 250000);

1 row created.

SQL> insert into product (product_id, category_id, code, product_name, price)
  2  VALUES(2, 1, 'JE5506', '스키니청바지', 270000);

1 row created.

SQL> commit;

Commit complete.

SQL> SELECT * FROM category;

CATEGORY_ID NAME                                                                                    
----------- ----------------------------------------                                                
          1 상의                                                                                    
          2 하의                                                                                    
          3 악세사리                                                                                
          4 신발                                                                                    

SQL> SELECT * FROM product;

PRODUCT_ID CATEGORY_ID CODE                                                                         
---------- ----------- ----------------------------------------                                     
PRODUCT_NAME                                  PRICE                                                 
---------------------------------------- ----------                                                 
         1           1 JE5505                                                                       
Metro청바지                                  250000                                                 
                                                                                                    
         2           1 JE5506                                                                       
스키니청바지                                 270000                                                 
                                                                                                    

SQL> set line 150
SQL> SELECT * FROM product;

PRODUCT_ID CATEGORY_ID CODE                                     PRODUCT_NAME                                  PRICE                                   
---------- ----------- ---------------------------------------- ---------------------------------------- ----------                                   
         1           1 JE5505                                   Metro청바지                                  250000                                   
         2           1 JE5506                                   스키니청바지                                 270000                                   

SQL> -- foreign key 제약조건을 자식 테이블에 부여할 경우, 부모는 함부로 데이터를 조작하지 못한다.
SQL> -- 실습
SQL> UPDATE category SET category_id=100;
UPDATE category SET category_id=100
*
ERROR at line 1:
ORA-00001: unique constraint (USER0907.SYS_C007022) violated 


SQL> -- 위에껀 시수
SQL> --실수
SQL> 
SQL> ALTER TABLE category
  2  DROP COLUMN category_id;
DROP COLUMN category_id
            *
ERROR at line 2:
ORA-12992: cannot drop parent key column 


SQL> -- parent key를 drop할 수 없다는 뜻
SQL> -- 외래키는 제약조건을 걸어놓으면, 데이터 무결성을 유지하게 해주는 안전장치를 마련한다.
SQL> 
SQL> 
SQL> 
SQL> -- 제약조건의 종류
SQL> -- 1. Unique
SQL> -- 2. not null
SQL> -- 3.
SQL> -- 3. primary key
SQL> -- 4. check
SQL> -- 5. default
SQL> -- 6. foreign key
SQL> 
SQL> 
SQL> -- promary key를 사람이 직접 넣으면 안됨,
SQL> -- 중복 가능성이 있고, 수치값이 몇까지 증가했는지조차 기억하기 어렵다.
SQL> -- 사용자에 의해 증가되므로 예측이 불가
SQL> -- 해결책) 시퀀스를 이용한다.
SQL> CREATE SEQUENCE seq_category
  2  INCREMENT BY 1
  3  START WITH 1;
CREATE SEQUENCE seq_category
*
ERROR at line 1:
ORA-01031: insufficient privileges 


SQL> -- 현재로서는 권한이 없다.
SQL> -- 관리자에서 권한을 부여하자
SQL> CONN SYSTEM/1234
Connected.
SQL> SHOW USER;
USER is "SYSTEM"
SQL> GRANT CREATE SEQUENCE TO user0907;

Grant succeeded.

SQL> conn user0907/1234;
Connected.
SQL> show user;
USER is "USER0907"
SQL> -- 숫자값만을 전담하여 증가시켜주는 객체인 시퀀스를 생성하자
SQL> CREATE SEQUENCE seq_category
  2  INCREMENT BY 1
  3  START WITH 1;

Sequence created.

SQL> -- 실습) 시퀀스를 호출하여 INSERT해보기
SQL> -- 기존에 들어간 category 데이터는 시퀀스를 이용하지 않았기 때문에 무결성이 깨진 데이터임.
SQL> -- 버리자
SQL> DELETE FROM CATEGORY;
DELETE FROM CATEGORY
*
ERROR at line 1:
ORA-02292: integrity constraint (USER0907.SYS_C007024) violated - child record found 


SQL> -- 제약조건을 걸어 놓아서 마음대로 category 데이터를 지울수가 없다.
SQL> -- 시퀀스 실습을 product 대상으로 하자
SQL> CRAETE SEQUENCE seq_product
SP2-0734: unknown command beginning "CRAETE SEQ..." - rest of line ignored.
SQL> CREATE SEQUENCE seq_product
  2  INCREMENT BY 1
  3  START WITH 1;

Sequence created.

SQL> -- 기존 테스트용으로 넣었떤 product의 category_id 값을 지우자
SQL> DELETE FROM product;

2 rows deleted.

SQL> COMMIT;

Commit complete.

SQL> SELECT * FROM product;

no rows selected

SQL> -- 시퀀스를 이용한 데이터 INSERT
SQL> INSERT INTO product(product_id, category_id, code, product_name, price)
  2  VALUES(seq_product.NEXTVAL, 1, 'JE0007', '스키니청바지', 30000);

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> /

1 row created.

SQL> SELECT * FROM product;

PRODUCT_ID CATEGORY_ID CODE                                     PRODUCT_NAME                                  PRICE                                   
---------- ----------- ---------------------------------------- ---------------------------------------- ----------                                   
         1           1 JE0007                                   스키니청바지                                  30000                                   
         2           1 JE0007                                   스키니청바지                                  30000                                   
         3           1 JE0007                                   스키니청바지                                  30000                                   
         4           1 JE0007                                   스키니청바지                                  30000                                   
         5           1 JE0007                                   스키니청바지                                  30000                                   
         6           1 JE0007                                   스키니청바지                                  30000                                   
         7           1 JE0007                                   스키니청바지                                  30000                                   
         8           1 JE0007                                   스키니청바지                                  30000                                   
         9           1 JE0007                                   스키니청바지                                  30000                                   
        10           1 JE0007                                   스키니청바지                                  30000                                   
        11           1 JE0007                                   스키니청바지                                  30000                                   
        12           1 JE0007                                   스키니청바지                                  30000                                   
        13           1 JE0007                                   스키니청바지                                  30000                                   
        14           1 JE0007                                   스키니청바지                                  30000                                   
        15           1 JE0007                                   스키니청바지                                  30000                                   
        16           1 JE0007                                   스키니청바지                                  30000                                   

16 rows selected.

SQL> -- sequence로 인해 product_id가 자동으로 증가하며 들어갔다.
SQL> 
SQL> 
SQL> 
SQL> 
SQL> commit
  2  ;

Commit complete.

SQL> spool off;
