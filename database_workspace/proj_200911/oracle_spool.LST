SQL> set line 200
SQL> set pagesize 50
SQL> -- 테이블 복사하기
SQL> CREATE TABLE member
  2  AS
  3  SELECT ename, sal, hiredate, deptno FROM  emp;

Table created.

SQL> SELECT * FROM member
  2  ;

ENAME                       SAL HIREDATE     DEPTNO                                                                                                                                                     
-------------------- ---------- -------- ----------                                                                                                                                                     
SMITH                       800 80/12/17         20                                                                                                                                                     
ALLEN                      1600 81/02/20         30                                                                                                                                                     
WARD                       1250 81/02/22         30                                                                                                                                                     
JONES                      2975 81/04/02         20                                                                                                                                                     
MARTIN                     1250 81/09/28         30                                                                                                                                                     
BLAKE                      2850 81/05/01         30                                                                                                                                                     
CLARK                      2450 81/06/09         10                                                                                                                                                     
SCOTT                      3000 87/04/19         20                                                                                                                                                     
KING                       5000 81/11/17         10                                                                                                                                                     
TURNER                     1500 81/09/08         30                                                                                                                                                     
ADAMS                      1100 87/05/23         20                                                                                                                                                     
JAMES                       950 81/12/03         30                                                                                                                                                     
FORD                       3000 81/12/03         20                                                                                                                                                     
MILLER                     1300 82/01/23         10                                                                                                                                                     

14 rows selected.

SQL> -- BLACK를 지우고 싶다?
SQL> -- 알받는 조건을 이용하자
SQL> DELETE FROM member WHERE ename = 'BLAKE';

1 row deleted.

SQL> -- 현재까지의 트랜잭션의 세부업무는 1개이다.
SQL> COMMIT;

Commit complete.

SQL> -- 기존 트랜잭션은 마무리되고, 새로운 트랜잭션 시작됨.
SQL> SELECT * FROM member;

ENAME                       SAL HIREDATE     DEPTNO                                                                                                                                                     
-------------------- ---------- -------- ----------                                                                                                                                                     
SMITH                       800 80/12/17         20                                                                                                                                                     
ALLEN                      1600 81/02/20         30                                                                                                                                                     
WARD                       1250 81/02/22         30                                                                                                                                                     
JONES                      2975 81/04/02         20                                                                                                                                                     
MARTIN                     1250 81/09/28         30                                                                                                                                                     
CLARK                      2450 81/06/09         10                                                                                                                                                     
SCOTT                      3000 87/04/19         20                                                                                                                                                     
KING                       5000 81/11/17         10                                                                                                                                                     
TURNER                     1500 81/09/08         30                                                                                                                                                     
ADAMS                      1100 87/05/23         20                                                                                                                                                     
JAMES                       950 81/12/03         30                                                                                                                                                     
FORD                       3000 81/12/03         20                                                                                                                                                     
MILLER                     1300 82/01/23         10                                                                                                                                                     

13 rows selected.

SQL> -- 이름 컬럼의 존재를 없애버리자 (테이블의 구조 변경)
SQL> -- DDL (Alter)
SQL> ALTER TABLE member
  2  DROP COLUMN ename;

Table altered.

SQL> SELECT * FROM member;

       SAL HIREDATE     DEPTNO                                                                                                                                                                          
---------- -------- ----------                                                                                                                                                                          
       800 80/12/17         20                                                                                                                                                                          
      1600 81/02/20         30                                                                                                                                                                          
      1250 81/02/22         30                                                                                                                                                                          
      2975 81/04/02         20                                                                                                                                                                          
      1250 81/09/28         30                                                                                                                                                                          
      2450 81/06/09         10                                                                                                                                                                          
      3000 87/04/19         20                                                                                                                                                                          
      5000 81/11/17         10                                                                                                                                                                          
      1500 81/09/08         30                                                                                                                                                                          
      1100 87/05/23         20                                                                                                                                                                          
       950 81/12/03         30                                                                                                                                                                          
      3000 81/12/03         20                                                                                                                                                                          
      1300 82/01/23         10                                                                                                                                                                          

13 rows selected.

SQL> -- ename 컬럼이 사라졌다!@>!?
SQL> DELETE FROM member WHERE sal=2450;

1 row deleted.

SQL> SELECT * FROM member;

       SAL HIREDATE     DEPTNO                                                                                                                                                                          
---------- -------- ----------                                                                                                                                                                          
       800 80/12/17         20                                                                                                                                                                          
      1600 81/02/20         30                                                                                                                                                                          
      1250 81/02/22         30                                                                                                                                                                          
      2975 81/04/02         20                                                                                                                                                                          
      1250 81/09/28         30                                                                                                                                                                          
      3000 87/04/19         20                                                                                                                                                                          
      5000 81/11/17         10                                                                                                                                                                          
      1500 81/09/08         30                                                                                                                                                                          
      1100 87/05/23         20                                                                                                                                                                          
       950 81/12/03         30                                                                                                                                                                          
      3000 81/12/03         20                                                                                                                                                                          
      1300 82/01/23         10                                                                                                                                                                          

12 rows selected.

SQL> -- 급여 컬럼 삭제
SQL> ALTER TABLE member
  2  DROP COLUMN sal;

Table altered.

SQL> SELECT * FROM member
  2  ;

HIREDATE     DEPTNO                                                                                                                                                                                     
-------- ----------                                                                                                                                                                                     
80/12/17         20                                                                                                                                                                                     
81/02/20         30                                                                                                                                                                                     
81/02/22         30                                                                                                                                                                                     
81/04/02         20                                                                                                                                                                                     
81/09/28         30                                                                                                                                                                                     
87/04/19         20                                                                                                                                                                                     
81/11/17         10                                                                                                                                                                                     
81/09/08         30                                                                                                                                                                                     
87/05/23         20                                                                                                                                                                                     
81/12/03         30                                                                                                                                                                                     
81/12/03         20                                                                                                                                                                                     
82/01/23         10                                                                                                                                                                                     

12 rows selected.

SQL> -- 날짜로 지우기
SQL> DELETE FROM member WHERE hiredate='81/04/02';

1 row deleted.

SQL> SELECT * FROM member;

HIREDATE     DEPTNO                                                                                                                                                                                     
-------- ----------                                                                                                                                                                                     
80/12/17         20                                                                                                                                                                                     
81/02/20         30                                                                                                                                                                                     
81/02/22         30                                                                                                                                                                                     
81/09/28         30                                                                                                                                                                                     
87/04/19         20                                                                                                                                                                                     
81/11/17         10                                                                                                                                                                                     
81/09/08         30                                                                                                                                                                                     
87/05/23         20                                                                                                                                                                                     
81/12/03         30                                                                                                                                                                                     
81/12/03         20                                                                                                                                                                                     
82/01/23         10                                                                                                                                                                                     

11 rows selected.

SQL> -- 입사일 삭제
SQL> ALTER TABLE member
  2  DROP COLUMN hiredate;

Table altered.

SQL> SELECT * FROM member;

    DEPTNO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        20                                                                                                                                                                                              
        30                                                                                                                                                                                              
        30                                                                                                                                                                                              
        30                                                                                                                                                                                              
        20                                                                                                                                                                                              
        10                                                                                                                                                                                              
        30                                                                                                                                                                                              
        20                                                                                                                                                                                              
        30                                                                                                                                                                                              
        20                                                                                                                                                                                              
        10                                                                                                                                                                                              

11 rows selected.

SQL> -- 수업의 의도 : 조건이 될 수 있는 컬럼을 없애는 시나리오임.
SQL> -- 7번째 사람을 지우는 것이 불가능하다.
SQL> DELETE FROM member WHERE deptno=30;

5 rows deleted.

SQL> SELECT * FROM member;

    DEPTNO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        20                                                                                                                                                                                              
        20                                                                                                                                                                                              
        10                                                                                                                                                                                              
        20                                                                                                                                                                                              
        20                                                                                                                                                                                              
        10                                                                                                                                                                                              

6 rows selected.

SQL> -- 앞으로 테이블 생성할 때, 반드시 무조건 존재시켜야 하는 컬럼이 있다!!
SQL> -- 테이블 정의시, 데이터의 결점을 두지 않기 위한 방법 = 무결성
SQL> -- 즉 테이블에 올바른 데이터를 받아들이기 위해,
SQL> -- 테이블 정의 시에 개발자는 많은 제약사항을 둘 수 있다.
SQL> -- 제한이 많을 수록 데이터는 정제된다.
SQL> -- 제약조건 (Constraint Condition)
SQL> -- (1) 주민번호과 같이 유일한 데이터만 받아들일 수 있도록 컬럼 정의시 제한하기
SQL> 
SQL> DROP TABLE member;

Table dropped.

SQL> -- DDL은 rollback 대상이 아님. DML만 트랜잭션의 대상이 된다.
SQL> CREATE TABLE member(
  2  name VARCHAR(20),
  3  age Number
  4  );

Table created.

SQL> -- 레코드를 보고자 함이 아닌 내가 만든 테이블의 구조를 보려면?
SQL> -- 테이블을 설명해달라는 명령어 : describe
SQL> DESC member;
 Name                                                                                                              Null?    Type
 ----------------------------------------------------------------------------------------------------------------- -------- ----------------------------------------------------------------------------
 NAME                                                                                                                       VARCHAR2(20)
 AGE                                                                                                                        NUMBER

SQL> set line 100;
SQL> DESC member;
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 NAME                                                           VARCHAR2(20)
 AGE                                                            NUMBER

SQL> -- 내용이 아닌 구조를 본다.
SQL> INSERT INTO member(name, age) VALUES('배트맨', 36);

1 row created.

SQL> SELECT * FROM member;

NAME                                            AGE                                                 
---------------------------------------- ----------                                                 
배트맨                                           36                                                 

SQL> INSERT INTO member(name, age) VALUES('앤트맨', 40);

1 row created.

SQL> SELECT * FROM member;

NAME                                            AGE                                                 
---------------------------------------- ----------                                                 
배트맨                                           36                                                 
앤트맨                                           40                                                 

SQL> INSERT INTO member(name, age) VALUES('배트맨', 36);

1 row created.

SQL> SELECT * FROM member;

NAME                                            AGE                                                 
---------------------------------------- ----------                                                 
배트맨                                           36                                                 
앤트맨                                           40                                                 
배트맨                                           36                                                 

SQL> -- 과연 첫번째 배트맨을 지울 수 있을까? --> 지울수 없다.
SQL> -- 해결랙) 테이블 생성시, 레코드와 레코드를 구분할 컬럼이 필요함
SQL> -- 	마치 한국에서의 주민번호의 역할과 같은 컬럼이 필요하다
SQL> DROP TABLE member;

Table dropped.

SQL> CREATE TABLE member(
  2  member_idx NUMBER UNIQUE,
  3  name VARCHAR(20),
  4  age NUMBER
  5  );

Table created.

SQL> -- member_idx라는 컬럼에 제한을 가한 상태라서, 유일한 데이터만 받아들임
SQL> INSERT INTO member(member_idx, name, age)
  2  VALUES(1, '배트맨', 36);

1 row created.

SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE                                      
---------- ---------------------------------------- ----------                                      
         1 배트맨                                           36                                      

SQL> INSERT INTO member(member_idx, name, age) VALUES(1, '수퍼맨', 40);
INSERT INTO member(member_idx, name, age) VALUES(1, '수퍼맨', 40)
*
ERROR at line 1:
ORA-00001: unique constraint (USER0907.SYS_C007006) violated 


SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE                                      
---------- ---------------------------------------- ----------                                      
         1 배트맨                                           36                                      

SQL> -- 올바르고 결점이 없는 데이터를 받아들이기 위해서는 컬럼 정의시 제약조건을 부여할 수 있다.
SQL> INSERT INTO member(member_idx, name, age) VALUES(2, 'superman', 39)
  2  ;

1 row created.

SQL> INSERT INTO member(member_idx, name, age) VALUES(3, 'xman', 28)
  2  ;

1 row created.

SQL> COMMIT;

Commit complete.

SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE                                      
---------- ---------------------------------------- ----------                                      
         1 배트맨                                           36                                      
         2 superman                                         39                                      
         3 xman                                             28                                      

SQL> INSERT INTO member(member_idx, name, age) VALUES(3, '배트맨', 36);
INSERT INTO member(member_idx, name, age) VALUES(3, '배트맨', 36)
*
ERROR at line 1:
ORA-00001: unique constraint (USER0907.SYS_C007006) violated 


SQL> INSERT INTO member(member_idx, name, age) VALUES(4, '배트맨', 36);

1 row created.

SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE                                      
---------- ---------------------------------------- ----------                                      
         1 배트맨                                           36                                      
         2 superman                                         39                                      
         3 xman                                             28                                      
         4 배트맨                                           36                                      

SQL> -- 테이블 만들 때는 무조건 유일성을 가지는 컬럼이 필요하다
SQL> -- unique는 유일한 데이터에 대해서는 무결성을 보장할 수 있지만,
SQL> -- null값을 허용해버리고 만다..
SQL> INSERT INTO member(name, age) VALUES('배트맨', 36);

1 row created.

SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE                                      
---------- ---------------------------------------- ----------                                      
         1 배트맨                                           36                                      
         2 superman                                         39                                      
         3 xman                                             28                                      
         4 배트맨                                           36                                      
           배트맨                                           36                                      

SQL> INSERT INTO member(name, age) VALUES('배트맨', 36);

1 row created.

SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE                                      
---------- ---------------------------------------- ----------                                      
         1 배트맨                                           36                                      
         2 superman                                         39                                      
         3 xman                                             28                                      
         4 배트맨                                           36                                      
           배트맨                                           36                                      
           배트맨                                           36                                      

6 rows selected.

SQL> -- 우리의 경우, 두사람 이상이 member_idx 값이 null이므로,원하는 레코드를 제어할 수 없다.
SQL> -- 해결책) null을 허용하지 않는 제약조건을 추가하자!!
SQL> 
SQL> DROP TABLE member;

Table dropped.

SQL> -- 이번에는 unique와 null을 허용하지 않는 not null 제약조건을 부여해본다.
SQL> CREATE TABLE member(
  2  member_idx NUMBER UNIQUE NOT NULL,
  3  name VARCHAR(20),
  4  age NUMBER
  5  );

Table created.

SQL> DESC member;
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 MEMBER_IDX                                            NOT NULL NUMBER
 NAME                                                           VARCHAR2(20)
 AGE                                                            NUMBER

SQL> INSERT INTO member(name, age) VALUES('batman', 39);
INSERT INTO member(name, age) VALUES('batman', 39)
*
ERROR at line 1:
ORA-01400: cannot insert NULL into ("USER0907"."MEMBER"."MEMBER_IDX") 


SQL> -- cannot insert NULL : 널을 허용하지 않는다.
SQL> -- 현재까지 배운 제약조건 2개 : unique, not null
SQL> -- 테이블의 데이터 구분시 사용되는 컬럼마다 2개의 제약조건을 주는 것은 너무 불편함
SQL> -- 따라서 제약조건 중, unique + not null을 합쳐놓은 제약조건을 지원한다.(모든 DBMS에서 지원)
SQL> -- ANSI 표준임
SQL> 
SQL> 
SQL> -- 세번째 제약조건
SQL> -- primary key : (unique + not null)
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE member;

Table dropped.

SQL> CREATE TABLE member(
  2  member_idx NUMBER PRIMARY KEY,
  3  name VARCHAR(20),
  4  age NUMBER
  5  );

Table created.

SQL> DESC member;
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 MEMBER_IDX                                            NOT NULL NUMBER
 NAME                                                           VARCHAR2(20)
 AGE                                                            NUMBER

SQL> 
SQL> 
SQL> -- 제약조건의 종류
SQL> -- 1) unique
SQL> -- 2) not null
SQL> -- 3) primary key ( unique + not null )
SQL> -- 4) default ( 기본값 적용시 사용 )
SQL> -- 5) check ( 값의 범위를 제한 )
SQL> -- 6) foreign key ( join시 사용되는 외래키 제약조건 )
SQL> DROP TABLE member;

Table dropped.

SQL> CREATE TABLE member{
  2  ;
CREATE TABLE member{
                   *
ERROR at line 1:
ORA-00911: invalid character 


SQL> CREATE TABLE member(
  2  member_idx NUMBER PRIMARY KEY,
  3  name VARCHAR(20),
  4  age NUMBER,
  5  regdate DATE DEFAULT SYSDATE,
  6  point NUMBER DEFAULT 500
  7  );

Table created.

SQL> -- DEFAULT ~~~ : 기본값으로 들어있게 처리..
SQL> DESC member;
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 MEMBER_IDX                                            NOT NULL NUMBER
 NAME                                                           VARCHAR2(20)
 AGE                                                            NUMBER
 REGDATE                                                        DATE
 POINT                                                          NUMBER

SQL> -- regdate, point에 해당하는 데이터는 우리가 넣을 필요 없고,
SQL> -- 시스템에 의해 자동으로 입력된다.
SQL> 
SQL> INSERT INTO member(member_idx, name, age) VALUES(1, 'batman', 37);

1 row created.

SQL> SELECT * FROM member;

MEMBER_IDX NAME                                            AGE REGDATE       POINT                  
---------- ---------------------------------------- ---------- -------- ----------                  
         1 batman                                           37 20/09/11        500                  

SQL> 
SQL> -- 제약조건과 상관은 없지만, sysdate는 뭘까?
SQL> SELECT SYSDATE FROM dual;

SYSDATE                                                                                             
--------                                                                                            
20/09/11                                                                                            

SQL> -- dual은 또 뭔가?
SQL> SELECT * FROM dual;

DU                                                                                                  
--                                                                                                  
X                                                                                                   

SQL> -- 그냥 컬럼이 하나짜리, 데이터가 한개 들어있는 dummy table임
SQL> -- 제공하는 이유
SQL> SELECT SYSDATE;
SELECT SYSDATE
             *
ERROR at line 1:
ORA-00923: FROM keyword not found where expected 


SQL> -- FROM 이 없기 때문에 ERROR
SQL> SELECT SYSDATE FROM emp;

SYSDATE                                                                                             
--------                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            
20/09/11                                                                                            

14 rows selected.

SQL> -- 14번이 나와버림..
SQL> 
SQL> 
SQL> -- 결론) 날짜를 조회할 때는 레코드가 1건만 필요하므로, dummy table을 이용한다.
SQL> 
SQL> -- SELECT '최시민' FROM emp;
SQL> SELECT '최시민' FROM emp;

'최시민'                                                                                            
------------------                                                                                  
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              
최시민                                                                                              

14 rows selected.

SQL> -- 역시 14번이 나온다.
SQL> SELECT '최시민' FROM dual;

'최시민'                                                                                            
------------------                                                                                  
최시민                                                                                              

SQL> -- 만약 나의 db에 dual이 없다면 -> 내가 만들면 된다.
SQL> CRAETE TABLE babo(
SP2-0734: unknown command beginning "CRAETE TAB..." - rest of line ignored.
SQL> boo VARCHAR(2)
SP2-0734: unknown command beginning "boo VARCHA..." - rest of line ignored.
SQL> CREATE TABLE babo(
  2  boo VARCHAR(2));

Table created.

SQL> INSERT INTO babo(boo) VALUES('X');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> SELECT SYSDATE FROM babo;

SYSDATE                                                                                             
--------                                                                                            
20/09/11                                                                                            

SQL> 
SQL> 
SQL> 
SQL> -- CHECK 제약조건 (값의 범위에 대한 제한)
SQL> -- member 테이블에 성별 컬럼을 추가해보자
SQL> -- 	기존에 이미 생성된 테이블에 대한 변경 -> ALTER
SQL> ALTER TABLE member
  2  ADD gender VARCHAR(4) CHECK(gender = '남');

Table altered.

SQL> DESC member;
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 MEMBER_IDX                                            NOT NULL NUMBER
 NAME                                                           VARCHAR2(20)
 AGE                                                            NUMBER
 REGDATE                                                        DATE
 POINT                                                          NUMBER
 GENDER                                                         VARCHAR2(4)

SQL> -- 실습) '남'이 아닌 다른 데이터를 넣을 때, 과연 제약조건이 동작하는가?
SQL> INSERT INTO member(member_idx, name, age, gender) VALUES(10, 'SPIDER', 24, '여');
INSERT INTO member(member_idx, name, age, gender) VALUES(10, 'SPIDER', 24, '여')
*
ERROR at line 1:
ORA-02290: check constraint (USER0907.SYS_C007011) violated 


SQL> -- check constraint ~~~ ERROR : 체크 제약조건에 위배되었다는 말
SQL> 
SQL> INSERT INTO member(member_idx, name, age, gender) VALUES(10, 'SPIDER', 24, '남');

1 row created.

SQL> SELECT * FROM MEMBER;

MEMBER_IDX NAME                                            AGE REGDATE       POINT GENDER           
---------- ---------------------------------------- ---------- -------- ---------- --------         
         1 batman                                           37 20/09/11        500                  
        10 SPIDER                                           24 20/09/11        500 남               

SQL> -- 제약조건 추가 전에 삽입했던 데이터는 제약조건에 위배되도 문제가 없나요? not null 인데 널값이라든지 check=남 인데 값이 없다든지요
SQL> -- 	제약조건 추가 전에 삽입한 데이터는 제약조건에 위배되어도 적용되지 않는다.
SQL> -- 	따라서, 처음 TABLE을 만들 때, 잘 해야한다.
SQL> SPOOL OFF;
