
톰캣 애러
	파일에 log를 보고 알 수 있다 -> 불편
	개발할 때만 이클립스에 톰캣을 연동한다
	기존 톰캣으 인스턴스를 가져와서 사용할 수 있음
	1. 우리가 사용 중인 톰캣을 반드시하기 전에 반드시! 톰캣을 꺼야함
	2. 바이너리 버전을 받아야 한다 (zip파일로)
	3. 압축 해제한 tomcat을 내 작업환경으로 가져온다
		tomcat을 키려면 tomcat파일의 bin에서 shell열기 또는 cmd열기 한다
	4. 현재 디렉토리(dir)에서 startup.bat을 실행시킨다
		./startup 끌때는 ./shupdown

-----------------------------------------------------------------------------------------------------------------------

javaEE같은 대형 어플리케이션 개발에서는 재사용성을 고려해야함

Connection Pool
	접속이 없더라도, 미리 접속 객체를 다서 확보해 놓는 기술
	web과 같이 stateless 기반의 통신에서는 요청/응답에 의해 네트워크가 유지될 수 없기 때문에
	다수의 사용자가 요청을 하면, 요청 수만큼 "접속/끊음"이 계속 발생하게 됨

JNDI (Java Naming Directory Interface)
	자바 코드 안에 설정 정보를 두지 말자
	유지 보수성을 높이려면 외부의 설정 파일에 둬서 관리
	설정파일로 유지보수하자
	자바 코드에서 설정파일을 찾을 수 있는 이름이 필요함

SingleTon
	GOF (4명의 개발자에 대한 애칭)에 의해 명명됨
	의미) 전 세계 개발자들의 공통된 개발 규칙, 패턴에 이름을 부여함으로써,
		협업 시 명칭이 통일됨


-----------------------------------------------------------------------------------------------------------------------

Mybatis란? SQL Mapper이다
	개발자가 쿼리문에 집중할 수 있도록 도와주는 퍼시스턴스 영역의 프레임웍이다
	SQL문과 자바 객체간의 Mapping을 자동으로 해준다

	Mybatis에서는 SqlSession이 쿼리문을 수행하는데, 이 객체를 얻기 위해서는
	SqlSessionFactory가 필요하다


-----------------------------------------------------------------------------------------------------------------------

jsp와 Session 객체
	웹은 사실은 실시간 연결을 유지할 수 없다
	그래서 고양이(tomcat)는 들어오는 사람에게 포스트잇(sessionId)를 클라이언트 등짝에 붙인다.
	클라이언트에게 붙어있는 포스트잇 == 과자 뿌스러기 == Cookie
	Cookie는 브로우저를 완전히 죽이면 사라진다
	또는 정해진 시간 안에 재접속이 없으면, 더이상 tomcat session에 접속하지 않는다고 인식하고
		나에게는 Cookie가 남아있다고 해도 Session을 지워버린다
	이런 원리로 마치 실시간 연결을 할 수 있는 것처럼 보이게 한다

	클라이언트가 서버에 접속 -> 서버는 오라클에 들어가서 

	php, asp : 소, 중, 규모 적합
	jsp : 대형 어플리케이션


-----------------------------------------------------------------------------------------------------------------------

Servlet 예제 환경 설정
	tomcat을 윈도우 버전으로 c드라이브의 tomcat8.5에 설치
	들어가서 conf의 server.xml 열기
	포트번호 바꾸기 (line 22)
		port="-1 -> 8007"
	웹사이트의 포트번호 바꾸기 (line 69)
		port="8080 -> 9090"
	서비스로 들어가서 가동
		가동 되면 충돌 피한 것
	

-----------------------------------------------------------------------------------------------------------------------

Servlet
	jsp는 사실 servlet이었다!
	jsp로 작성하고 실행할 때는, sevlet 기반의 class를 만들어 실행시키는 것!
	request 내장객체를 사용할 수 있는 것도, servlet기반의 class를 사용하기 때문이다
	고양이가 jsp를 servlet으로 코딩하는 것임
	
javaEE 고급개발자가 되려면?
	jsp보다 servlet을 파야 한다!!!!!

web.xml은 배포에 대한 설명을 담는 곳


-----------------------------------------------------------------------------------------------------------------------

중요한 것들
	1. JVM 메모리 구조
	2. thread의 생명주기
	3. Servlet의 생명주기 : 서블릿은 언제 태어나서, 생애 동안 어떻게 일하고, 언제 죽는가 - 오늘











-----------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------











