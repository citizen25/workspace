mybatis JOIN
	- 부모 관점 : collection
		즉, 부모와 자식 1:n 관계를 처리
	- 자식 관점 : assocation
		부모와 자식간 1:1 관계를 처리
	- 주의) join문이 필요없다
		sql join이 아니라 프로그래밍적으로 join효과를 낸다

---------------------------------------------------------------------------------------------------------
Spring 위에서 트랜잭션 처리 (중요 point)

eclipse에서 지원하는 Spring Web Proect 템플릿을 사용해본다
	Legacy Project Templete 사용
STS4는 Spring Boot기반이라서 Spring STS3 Add on 설치해야함

Spring MVC Project

target folder
	Maven 결과물(compile 결과물)이 들어오는 곳 -> 배포

Maven?
	Build Tool이다. apache 저장소와 연결되며 의존성(외부 라이브러리) 자원 관리 기능까지 있다
	Build : .java -> .class

pom.xml에 mybatis jar, oracle driver 추가

----------------------------------------------------------------------------------------------------------------

com.koreait.mylegacy.controller.emp
com.회사명.프로젝트명.mvc.컨텐츠

----------------------------------------------------------------------------------------------------------------

Exception
	RumtimeException
	CompiletimeException

.MPart Tree{
  font-size: 14;
}

----------------------------------------------------------------------------------------------------------------


admin, client servlet을 나누기 위한 방법

[다음의 조건을 만족하는 객체]
	1. 모든 servlet 간 데이터를 공유할 수 있어야 한다
	2. 서블릿보다 먼저 태어나있어야 한다	


	생명력
		request < session < servlet-context
		request: response를 보낼 때까지 산다
		session: 브라우저 닫을 때까지 산다. session은 요청이 들어온 이후에 할당되므로 사용 불가
		servlet-context(application 내장 객체) : 톰캣 킬때부터, 톰캣 끌때까지 살아있는다. 요청이 들어오기도 전에 할당 가능. context=문맥, 맥락, 범위 (가장 길게 살아남아잇는다)


요청이 들어오기도 전에 무언가 작업할 수 있어야 한다!


----------------------------------------------------------------------------------------------------------------


Spring MVC를 사용하고 있지만, model 파트에서는 전혀 Spring의 지원을 받고있지 않다
	Spring + Mybatis

	Spring이 지원하는 Mybatis 연동 기술을 배워본다

	Spring의 도움을 받지 않고도 어제 충분히 transaction을 처리했었다
	그렇다면 spring이 지원하는 db연동 기술을 굳이 써야할까?
	써야한다. 왜냐하면 개발자가 부담해야할 transaction을 Spring이 알아서 처리해주는 등의
	여러가지 EE개발에서 필요한 서비스를 지원해주기 때문에.
	만일 Spring이 없었다면 EJB를 사용해서 서비스 받아야 한다.
	협업을 위해서는 framework를 사용하는것이 효율 좋다


	Spring은 transaction 매니져러는 객체를 통해 각 데티어 연동 기술마다 특화된 트랜잭션을 처리하는데,
	각 기술마다 매니져의 객체가 별도로 존재

	jpa jdbc mybatis hibernate

	ex)
		mybatis - DataSourceTransactionManager
		hibernate - HibernateTransactionManager

	Mybatis : SqlSession -> Spring Mybatis : SqlSessionTemplate == SqlSession + Template
	Mybatis : SqlSessionFactory -> Spring Mybatis : SqlSessionFactoryBean == SqlSessionFactory + Bean
		Spring의 mybaits에서는 SqlSessionTemplate 객체가 쿼리 수행 객체이다
		SqlSessionTemplate 객체는 SqlSessionFactoryBean 객체로 부터 얻을 수 있다
		









------------------------------------------------------------------------------------------------------------

[Oracle Query]

create table notice(
	notice_id number primary key
	, title varchar(100)
	, writer varchar(20)
	, content clob
	, regdate date default sysdate
	, hit number default 0
);

create sequence seq_notice
increment by 1
start with 1;




























