package car;
/* 이 클래스는 모든 자동차류의 최상위 클래스로서, 가장 보편적인 기능과 속성들만을 보유하면 된다. */
public class Car{

	// 부모클래스의 생성자 정의. 자식 클래스를 인스턴스화할 때, 부모 클래스도 인스턴스로 만들어지는지 보기위해..
	/*
	public Car(){
		System.out.println("자식의 super()호출에 의해 난 호출됩니다!");
	}
	*/

	// 개발자가 매개변수 있는 생성자만 정의함. 개발자가 생성자를 정의하면 컴파일러에 의한 디폴트 생성자 자동삽입은 없음.
	// 따라서 Car 클래스는 생성자가 오직 딱 1개만 있게 됨.
	public Car(String brand){	// 매개변수 있는 생성자라서, new Car("벤츠") 등의 방법으로 호출해야 함.
		this.brand = brand;
	}
	// Taxi 클래스의 디폴트 생성자에서는 무조건 super()가 들어있으므로, 매개변수 없는 생성자인 Car()를 호출하고 있는 것과 같다.
	// 따라서 현재 Car에는 Car() 생성자 대신에 Car(String brand)만 존재하므로 생성자 호출 시 에러가 난다.
	// 해결책) 현재 상황에서 디폴트 생성자는 우리에게 아무런 도움을 못 주므로, 이제 개발자가 주도해서 원하는 생성자 호출을 해야함.
	// 디폴트 생성자에 의존 X == 방치 X. 생성자를 정의한다.
	// Taxi의 생성자 안에 super("브랜드이름"); 을 넣는다.

	public Car(){		// 꼼수) 매개변수 없는 생성자도 추가한다.
		// 생성자가 2개이상 추가되면 마치 중복정의처럼 보이지만, 자세히보면, 매개변수의 갯수가 다르므로 오버로딩으로 인정된다.
		// 이렇게 하면, Taxi() 생성자에서 매개변수 없는 super() 호출 시, 이 디폴트 생성자를 호출하여 에러가 나지 않는다.
		
	}

	String brand;	// 제조사는 정해져있으면 안된다.

	public void move(){		
		System.out.println("자동차가 갑니다");
	}
}