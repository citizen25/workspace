class DataType1{
	/*
	수업 순서 (js배울 때도 그랬듯이)
		1. 변수/자료형 (메모리에 데이터 올리는 방법: 일거리 제공법)
		2. 연산자
		3. 제어문(반복, 조건)
		4. 함수
		5. 배열
		6. 객체
	*/
	/* 프로그래밍 언어에서 사용되는 데이터의 종류 3가지
		1) 숫자
			정수
				byte(8bit=1byte) < short(2byte) < int(4byte) < long(8byte)
			실수 : 소수점을 포함한 수
				float(4byte) < double(8byte)
		2) 문자
			char : 문자열과 다름. 문자열은 1개 이상의 문자들의 집합.
		3) 논리값
			true / false
	*/
	// 실행부
	public static void main(String[] args){
		// 데이터의 표현 가능 범위 : -2^(n-1) ~ 2^(n-1)-1 (n은 자료형의 byte 용량)

		byte x = 127;		// 1byte 차지
		// 1byte로 표현할 수 있는 데이터의 가짓수는? 2의 8승 == 256가지.

		short s = 47;	// 2byte 차지
		// 2byte로 표현할 수 있는 데이터의 가짓수는? 2의 16승 == ??

		int k = 500;	// 4byte 차지
		long a = 3;		// 8byte 차지
		System.out.println("x값은 " + x);


		// 실수
		// 자바의 기본 자료형들엔, 디폴트 자료형이 적용된다.
		// 정수의 디폴트 자료형은 int이고, 실수의 디폴트 자료형은 double이다.

		// 따라서 아래와 같이 3.689라고 명시하면, 디폴트 자료형인 double로 데이터가 생성된다.
		float b = 3.689f;

		char j = 'A';	// 2byte 차지. 왜 1byte가 아니라 2byte?
		// 1byte: 2의 8승 = 256가지의 데이터 표현 가능
		//		아스키코드 256자로는영미권 이외의 문자 표현 불가.
		// 2byte: 2의 16승 -> 전세계 모든 문자를 다 표현할 수 있다.
		//		아스키코드보다 확장된 유니코드을 지원

		boolean e = true;	// 1byte 차지.
		// c, javascript 등에서는 true값을 1로 대체할 수 있으나,
		// java에서는 1이 true를 대신할 수 없다.


		/* 
		c, java, c# 등에서 자료형이 지원되는 이유.
			사람은 데이터의 종류로 생각하지만, 컴퓨터는 사실 모두 숫자로 생각한다.
			따라서, 데이터형이 가지는 의미는 컴퓨터의 용량 확보이다.
		*/
	}
}




